Index: src/com/anton/EnemyInitialized.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.anton;\r\n\r\nimport com.anton.ClassEnemy.*;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class EnemyInitialized extends Player{\r\n    private List<Player> enemy;\r\n\r\n    public EnemyInitialized(){\r\n        enemy.add(new Skelet(0));\r\n        enemy.add(new Skelet(1));\r\n    }\r\n\r\n    public List<Player> getEnemy() {\r\n        return enemy;\r\n    }\r\n\r\n    public void setEnemy(List<Player> enemy) {\r\n        this.enemy = enemy;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/anton/EnemyInitialized.java b/src/com/anton/EnemyInitialized.java
--- a/src/com/anton/EnemyInitialized.java	(revision 1b875246ab3f43d3ef5cc565ac608300e6627760)
+++ b/src/com/anton/EnemyInitialized.java	(date 1616684242300)
@@ -4,11 +4,11 @@
 import java.util.ArrayList;
 import java.util.List;
 
-public class EnemyInitialized extends Player{
+public class EnemyInitialized {
     private List<Player> enemy;
 
     public EnemyInitialized(){
-        enemy.add(new Skelet(0));
+        enemy.add(new Skelet(1));
         enemy.add(new Skelet(1));
     }
 
Index: hitLose
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>увернулся\r\nсделал финт ушами
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/hitLose b/hitLose
--- a/hitLose	(revision 1b875246ab3f43d3ef5cc565ac608300e6627760)
+++ b/hitLose	(date 1616684242342)
@@ -1,2 +1,3 @@
+отскочил
 увернулся
-сделал финт ушами
\ No newline at end of file
+парировал удар
\ No newline at end of file
Index: src/com/anton/Visual.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.anton;\r\n\r\npublic class Visual {\r\n    public static void visual(){\r\n        System.out.println(\"-------------------------------------------\");\r\n    }\r\n    public static void battle1vs1(Player player1,Player player2){\r\n\r\n        System.out.println(\"--------------------------------\");\r\n        System.out.printf(\"Здоровье:%2s/%-2s |  Здоровье:%2s/%-2s\\n\",player1.getHealth(),player1.getHealthmax(),player2.getHealth(),player2.getHealthmax());\r\n        System.out.printf(\"Мод.атак:%2s    |  Мод.атак:%2s\\n\",player1.getAttackmodificator(),player2.getAttackmodificator());\r\n        System.out.printf(\"Защита:  %2s    |  Защита:  %2s\\n\",player1.getDefense(),player2.getDefense());\r\n\r\n\r\n    }\r\n    public static void health1vs1(Player player1,Player player2){\r\n        System.out.printf(\"%-10s        |     %-10s\\n\",player1.getName(),player2.getName());\r\n        System.out.printf(\"Здоровье:%2d/%-2d    |     Здоровье:%2d/%-2d\\n\",player1.getHealth(),player1.getHealthmax(),player2.getHealth(),player2.getHealthmax());\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/anton/Visual.java b/src/com/anton/Visual.java
--- a/src/com/anton/Visual.java	(revision 1b875246ab3f43d3ef5cc565ac608300e6627760)
+++ b/src/com/anton/Visual.java	(date 1616684242362)
@@ -1,6 +1,14 @@
 package com.anton;
 
+import java.util.Collections;
+import java.util.Comparator;
+import java.util.List;
+
 public class Visual {
+    public static final String RESET = "\u001B[0m";
+    public static final String RED = "\u001B[31m";
+    public static final String GREEN = "\u001B[32m";
+
     public static void visual(){
         System.out.println("-------------------------------------------");
     }
@@ -17,5 +25,89 @@
         System.out.printf("%-10s        |     %-10s\n",player1.getName(),player2.getName());
         System.out.printf("Здоровье:%2d/%-2d    |     Здоровье:%2d/%-2d\n",player1.getHealth(),player1.getHealthmax(),player2.getHealth(),player2.getHealthmax());
     }
+    public static void BattleVisual (List<Player> player){
 
+        Collections.sort(player,IDComparator);
+        for (int i=0;i< player.size();i++){
+            if (player.get(i).isIDplayer()) {
+                System.out.print(GREEN);
+                System.out.print("\u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550" +
+                        "\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2557");
+                System.out.print(RESET);
+            } else{
+                System.out.print(RED);
+                System.out.print("    \u2554\u2550\u2550\u2550\u2550\u2550\u2550\u2550" +
+                    "\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550" +
+                    "\u2550\u2550\u2557");
+                System.out.print(RESET);
+            }
+        }
+        System.out.println("");
+        for (int i=0;i< player.size();i++){
+            if (player.get(i).isIDplayer()) {
+                System.out.print(GREEN);
+                System.out.printf("\u2551 %-14s \u2551",player.get(0).getName());
+                System.out.print(RESET);
+            } else{
+                System.out.print(RED);
+                System.out.printf("    \u2551 %-20s\u2551",player.get(i).getName());
+                System.out.print(RESET);
+            }
+        }
+        System.out.println("");
+        for (int i=0;i< player.size();i++){
+            if (player.get(i).isIDplayer()) {
+                System.out.print(GREEN);
+                System.out.print("\u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550" +
+                "\u2550\u2550\u2550\u2550\u2550\u2563");
+                System.out.print(RESET);
+            } else{
+                System.out.print(RED);
+                System.out.print("    \u2560\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550" +
+                    "\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2563");
+                System.out.print(RESET);
+            }
+        }
+        System.out.println("");
+        for (int i=0;i< player.size();i++){
+            if (player.get(i).isIDplayer()) {
+                System.out.print(GREEN);
+                System.out.printf("\u2551 %2d/%-11d \u2551",player.get(0).getHealth(),player.get(0).getHealthmax());
+                System.out.print(RESET);
+            } else{
+                System.out.print(RED);
+                System.out.printf("    \u2551 %2d/%-17d\u2551",player.get(i).getHealth(),player.get(i).getHealthmax());
+                System.out.print(RESET);
+            }
+        }
+        System.out.println("");
+        for (int i=0;i< player.size();i++){
+            if (player.get(i).isIDplayer()) {
+                System.out.print(GREEN);
+                System.out.print("\u255A\u2550\u2550\u2550\u2550\u2550\u2550\u2550" +
+                        "\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255D");
+                System.out.print(RESET);
+            } else{
+                System.out.print(RED);
+                System.out.print("    \u255A\u2550\u2550\u2550\u2550\u2550\u2550\u2550" +
+                        "\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550" +
+                        "\u2550\u2550\u255D");
+                System.out.print(RESET);
+            }
+        }
+        System.out.println();
+    }
+
+    public static Comparator<Player> IDComparator = new Comparator<Player>() {
+        @Override
+        public int compare(Player e1, Player e2) {
+            if (e2.isIDplayer()){
+                return 1;
+            } else if (e1.isIDplayer()){
+                return -1;
+            }else{
+                return 0;
+            }
+        }
+    };
 }
Index: src/com/anton/Start.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.anton;\r\n\r\nimport com.anton.ClassEnemy.Skelet;\r\nimport com.anton.ClassPlayer.*;\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\nimport java.util.Scanner;\r\n\r\n\r\npublic class Start {\r\n    public static void main(String[] args) throws InterruptedException, IOException, ClassNotFoundException {\r\n        Warior men=Warior.initialized();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/anton/Start.java b/src/com/anton/Start.java
--- a/src/com/anton/Start.java	(revision 1b875246ab3f43d3ef5cc565ac608300e6627760)
+++ b/src/com/anton/Start.java	(date 1616684242416)
@@ -12,7 +12,15 @@
 
 
 public class Start {
-    public static void main(String[] args) throws InterruptedException, IOException, ClassNotFoundException {
-        Warior men=Warior.initialized();
+
+    public static void main(String[] args) throws InterruptedException, IOException, ClassNotFoundException, MyException {
+        Player men=PlayerInitialized.Initial();
+        List<Player> enemy = new ArrayList<>();
+        enemy.add(new Skelet(1));
+        enemy.add(new Skelet(1));
+        enemy.add(new Skelet(1));
+        FightAlgorithm.Fight(men,enemy);
+
+
     }
 }
Index: src/com/anton/PlayerInitialized.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.anton;\r\n\r\nimport com.anton.ClassPlayer.Warior;\r\n\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\npublic class PlayerInitialized{\r\n\r\n    static Scanner scanner=new Scanner(System.in);\r\n    static int bonuspoint=15;\r\n    static int number=0;\r\n    static int[] temp=new int[]{10,10,10,10,10,10};\r\n\r\n\r\n    public static int[] character() throws IOException{\r\n        boolean end;\r\n        System.out.println(\"У вас есть лишних \" + bonuspoint + \" очков, по умолчанию все характеристики равны \" +\r\n                \"10 вы вольны изменить их согласно таблице, но не меньше 7 и не больше 18\");\r\n        tablCharacter();\r\n        //tempVizual(temp);\r\n        start:\r\n        do{\r\n            int number2=0;\r\n            System.out.println(\"Выберите характеристику для изменения:\" +\"\\nБонусных очков для изменения:\"+ bonuspoint +\r\n                  \"\\n1.Сила-\"+temp[0]+\"\\n2.Ловкость-\"+temp[1]+\"\\n3.Выносливость-\"+temp[2]+\r\n                  \"\\n4.Интеллект-\"+temp[3]+\"\\n5.Мудрость-\"+temp[4]+\"\\n6.Харизма-\"+temp[5]+\r\n                  \"\\n7.Таблица изменения характеристик\" + \"\\n8.Сохранить\" + \"\\n9.Выход\");\r\n            end=true;\r\n            number=scanner.nextInt();\r\n            if (number==7){\r\n                tablCharacter();\r\n                continue;\r\n            }\r\n            if (number==8){\r\n                ObjectOutputStream oos=new ObjectOutputStream(new FileOutputStream(\"PersonCharact.bin\"));\r\n                oos.writeObject(temp);\r\n                oos.close();\r\n                continue;\r\n            }\r\n            if (number==9){\r\n                break;\r\n            }\r\n            if ((number<1)||(number>8)) {\r\n              System.out.println(\"Число не в диапазоне 1-8\");\r\n              continue;\r\n            }\r\n            System.out.println(\"Введите новое значение\");\r\n            number2=scanner.nextInt();\r\n           if (number2<7||number2>18){\r\n             System.out.println(\"Неверное значение. Введённое число должно быть в диапазоне 7-18\");\r\n             continue;\r\n          }\r\n\r\n          changeCharacter(number,number2,temp);\r\n\r\n        }while(end);\r\n\r\n       return temp;\r\n    }\r\n\r\n\r\n    private static void tempVizual(int[] temp){\r\n        System.out.printf(\"1.Сила:          %-2d\\n\" +\r\n                         \"2.Ловкость:      %-2d\\n\" +\r\n                         \"3.Выносливость:  %-2d\\n\" +\r\n                         \"4.Интеллект:     %-2d\\n\" +\r\n                         \"5.Мудрость:      %-2d\\n\" +\r\n                         \"6.Харизма:       %-2d\\n\",temp[0],temp[1],temp[2],temp[3],temp[4],temp[5]);\r\n    }\r\n\r\n\r\n    private static void tablCharacter(){\r\n        System.out.println(\"   Значение     |    Стоимость   ||   Значение     |    Стоимость   \");\r\n        System.out.println(\"--------------------------------------------------------------------\");\r\n        System.out.println(\"       7        |        -4      ||       13       |         3      \");\r\n        System.out.println(\"       8        |        -2      ||       14       |         5      \");\r\n        System.out.println(\"       9        |        -1      ||       15       |         7      \");\r\n        System.out.println(\"       10       |         0      ||       16       |        10      \");\r\n        System.out.println(\"       11       |         1      ||       17       |        13      \");\r\n        System.out.println(\"       12       |         2      ||       18       |        17      \");\r\n    }\r\n\r\n\r\n    private static void changeCharacter(int number1,int number2,int[] temp){\r\n        int tempchange=0;\r\n        Map<Integer,Integer> keyValue=new HashMap<>();\r\n        keyValue.put(7,-4);\r\n        keyValue.put(8,-2);\r\n        keyValue.put(9,-1);\r\n        keyValue.put(10,0);\r\n        keyValue.put(11,1);\r\n        keyValue.put(12,2);\r\n        keyValue.put(13,3);\r\n        keyValue.put(14,5);\r\n        keyValue.put(15,7);\r\n        keyValue.put(16,10);\r\n        keyValue.put(17,13);\r\n        keyValue.put(18,17);\r\n        tempchange=keyValue.get(temp[number1-1]) - keyValue.get(number2);\r\n        if (Math.abs(tempchange)>bonuspoint){\r\n            System.out.println(\"Число выходит за пределы границ попробуйте снова\");\r\n        }else{\r\n            bonuspoint+=tempchange;\r\n            temp[number1-1]=number2;\r\n        }\r\n    }\r\n    private static Player createdCharacters(){\r\n        return null;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/anton/PlayerInitialized.java b/src/com/anton/PlayerInitialized.java
--- a/src/com/anton/PlayerInitialized.java	(revision 1b875246ab3f43d3ef5cc565ac608300e6627760)
+++ b/src/com/anton/PlayerInitialized.java	(date 1616684242426)
@@ -6,12 +6,43 @@
 import java.util.*;
 
 public class PlayerInitialized{
-
     static Scanner scanner=new Scanner(System.in);
     static int bonuspoint=15;
     static int number=0;
     static int[] temp=new int[]{10,10,10,10,10,10};
 
+    public static <E extends Player>E Initial() throws IOException, ClassNotFoundException {
+        Scanner scanner=new Scanner(System.in);
+        System.out.println("Введите имя персонажа");
+        String name=scanner.nextLine();
+        System.out.println("Выберите класс персонажа из списка: Воин");
+        do{
+        String classname=scanner.nextLine();
+        if (classname.equalsIgnoreCase("Воин")){
+            do {
+                System.out.println("Выбрать характеристики созданного персонажа (1) или из сохранённого (2)");
+                int start = scanner.nextInt();
+                if (start == 1) {
+                    int[] character = PlayerInitialized.character();
+                    Warior men = new Warior(name, "Воин", character[0], character[1], character[2], character[3], character[4],
+                            character[5]);
+                    return (E) men;
+                } else if (start == 2) {
+                    ObjectInputStream ois = new ObjectInputStream(new FileInputStream("PersonCharact.bin"));
+                    int[] character2 = (int[]) ois.readObject();
+                    Warior men = new Warior(name, "Воин", character2[0], character2[1], character2[2], character2[3], character2[4],
+                            character2[5]);
+                    ois.close();
+                    return (E) men;
+                } else {
+                    System.out.println("Неверное значение введите ещё раз");
+                }
+            }while(true);
+            }else{
+                System.out.println("Неверный класс");
+            }
+        }while (true);
+    }
 
     public static int[] character() throws IOException{
         boolean end;
Index: src/com/anton/Player.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.anton;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\npublic class Player {\r\n    private boolean life;\r\n    private String name;\r\n    private String classPlayer;          //Класс игрока\r\n    private int strength;                //Сила\r\n    private int strengthModify;          //Модификтор силы\r\n    private int dexterity ;              //Ловкость\r\n    private int dexterityModify;         //Модификатор ловкости\r\n    private int costitution;             //Вынословисть\r\n    private int contitutionModify;       //Модификатор выносливости\r\n    private int intellegence;            //Интеллект\r\n    private int intellegenceModify;      //Модификатор интеллекта\r\n    private int wisdom;                  //Мудрость\r\n    private int wisdomModify;            //Модификатор Мудрости\r\n    private int charisma;                //Харизма\r\n    private int charismaModify;          //Модификатор харизмы\r\n    private int health;                  //Здоровье\r\n    private int healthmax;               //Здоровье максимальное\r\n    private int weapondamage;            //максимальный урон оружием\r\n    private int attackmodificator;       //модификатор урон\r\n    private int basicmodificatorattack;  //базовый модификатор атаки\r\n    private int defense;                 //параметр защиты\r\n    private boolean IDplayer;                 //состояние игрок(true)-враг(false)\r\n    private HashMap<String, Integer[]> weapon;  //виды действий атаки\r\n    private int experience;              //текущий опыт (персонажа и противника который можно получить после его убийства)\r\n    private int experiencemax;           //максимальный опыт на текущем уровне\r\n    private int lvl;                     //текущий лвл игрока\r\n    private ArrayList<Integer> exptable;      //таблица получения опыта\r\n\r\n    public String getName() {\r\n        return name;\r\n    }\r\n\r\n    public void setName(String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public int getStrength() {\r\n        return strength;\r\n    }\r\n\r\n    public void setStrength(int strength) {\r\n        this.strength = strength;\r\n    }\r\n\r\n    public int getStrengthModify() {\r\n        return strengthModify;\r\n    }\r\n\r\n    public void setStrengthModify(int strengthModify) {\r\n        this.strengthModify = strengthModify;\r\n    }\r\n\r\n    public int getDexterity() {\r\n        return dexterity;\r\n    }\r\n\r\n    public void setDexterity(int dexterity) {\r\n        this.dexterity = dexterity;\r\n    }\r\n\r\n    public int getDexterityModify() {\r\n        return dexterityModify;\r\n    }\r\n\r\n    public void setDexterityModify(int dexterityModify) {\r\n        this.dexterityModify = dexterityModify;\r\n    }\r\n\r\n    public int getCostitution() {\r\n        return costitution;\r\n    }\r\n\r\n    public void setCostitution(int costitution) {\r\n        this.costitution = costitution;\r\n    }\r\n\r\n    public int getContitutionModify() {\r\n        return contitutionModify;\r\n    }\r\n\r\n    public void setContitutionModify(int contitutionModify) {\r\n        this.contitutionModify = contitutionModify;\r\n    }\r\n\r\n    public int getIntellegence() {\r\n        return intellegence;\r\n    }\r\n\r\n    public void setIntellegence(int intellegence) {\r\n        this.intellegence = intellegence;\r\n    }\r\n\r\n    public int getIntellegenceModify() {\r\n        return intellegenceModify;\r\n    }\r\n\r\n    public void setIntellegenceModify(int intellegenceModify) {\r\n        this.intellegenceModify = intellegenceModify;\r\n    }\r\n\r\n    public int getWisdom() {\r\n        return wisdom;\r\n    }\r\n\r\n    public void setWisdom(int wisdom) {\r\n        this.wisdom = wisdom;\r\n    }\r\n\r\n    public int getWisdomModify() {\r\n        return wisdomModify;\r\n    }\r\n\r\n    public void setWisdomModify(int wisdomModify) {\r\n        this.wisdomModify = wisdomModify;\r\n    }\r\n\r\n    public int getCharisma() {\r\n        return charisma;\r\n    }\r\n\r\n    public void setCharisma(int charisma) {\r\n        this.charisma = charisma;\r\n    }\r\n\r\n    public int getCharismaModify() {\r\n        return charismaModify;\r\n    }\r\n\r\n    public void setCharismaModify(int charismaModify) {\r\n        this.charismaModify = charismaModify;\r\n    }\r\n\r\n    public String getClassPlayer() {\r\n        return classPlayer;\r\n    }\r\n\r\n    public void setClassPlayer(String classPlayer) {\r\n        this.classPlayer = classPlayer;\r\n    }\r\n\r\n    public int getHealth() {\r\n        return health;\r\n    }\r\n\r\n    public void setHealth(int health) {\r\n        this.health = health;\r\n    }\r\n\r\n    public int getAttackmodificator() {\r\n        return attackmodificator;\r\n    }\r\n\r\n    public void setAttackmodificator(int attackmodificator) {\r\n        this.attackmodificator = attackmodificator;\r\n    }\r\n\r\n    public int getDefense() {\r\n        return defense;\r\n    }\r\n\r\n    public void setDefense(int defense) {\r\n        this.defense = defense;\r\n    }\r\n\r\n    public int getHealthmax() {\r\n        return healthmax;\r\n    }\r\n\r\n    public void setHealthmax(int healthmax) {\r\n        this.healthmax = healthmax;\r\n    }\r\n\r\n    public int getWeapondamage() {\r\n        return weapondamage;\r\n    }\r\n\r\n    public void setWeapondamage(int weapondamage) {\r\n        this.weapondamage = weapondamage;\r\n    }\r\n\r\n    public int getBasicmodificatorattack() {\r\n        return basicmodificatorattack;\r\n    }\r\n\r\n    public void setBasicmodificatorattack(int basicmodificatorattack) {\r\n        this.basicmodificatorattack = basicmodificatorattack;\r\n    }\r\n\r\n    public boolean isIDplayer() {\r\n        return IDplayer;\r\n    }\r\n\r\n    public void setIDplayer(boolean IDplayer) {\r\n        this.IDplayer = IDplayer;\r\n    }\r\n\r\n    public boolean isLife() {\r\n        return life;\r\n    }\r\n\r\n    public void setLife(boolean life) {\r\n        this.life = life;\r\n    }\r\n\r\n    public HashMap<String, Integer[]> getWeapon() {\r\n        return weapon;\r\n    }\r\n\r\n    public void setWeapon(HashMap<String, Integer[]> weapon) {\r\n        this.weapon = weapon;\r\n    }\r\n\r\n    public int getExperience() {\r\n        return experience;\r\n    }\r\n\r\n    public void setExperience(int experience) {\r\n        this.experience = experience;\r\n    }\r\n\r\n    public int getExperiencemax() {\r\n        return experiencemax;\r\n    }\r\n\r\n    public void setExperiencemax(int experiencemax) {\r\n        this.experiencemax = experiencemax;\r\n    }\r\n\r\n    public int getLvl() {\r\n        return lvl;\r\n    }\r\n\r\n    public void setLvl(int lvl) {\r\n        this.lvl = lvl;\r\n    }\r\n\r\n    public ArrayList<Integer> getExptable() {\r\n        return exptable;\r\n    }\r\n\r\n    public void setExptable(ArrayList<Integer> exptable) {\r\n        this.exptable = exptable;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/anton/Player.java b/src/com/anton/Player.java
--- a/src/com/anton/Player.java	(revision 1b875246ab3f43d3ef5cc565ac608300e6627760)
+++ b/src/com/anton/Player.java	(date 1616684242438)
@@ -1,11 +1,9 @@
 package com.anton;
 
-import java.util.ArrayList;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Random;
+import java.io.FileNotFoundException;
+import java.util.*;
 
-public class Player {
+public class Player{
     private boolean life;
     private String name;
     private String classPlayer;          //Класс игрока
@@ -34,6 +32,26 @@
     private int lvl;                     //текущий лвл игрока
     private ArrayList<Integer> exptable;      //таблица получения опыта
 
+    private int KO;                      //Коэффициент опасности
+    private int initiative;              //Инициатива противника
+
+
+    public Player (int KO){
+        this.KO=KO;
+    }
+
+    public Player(String name,String classPlayer,int strength,int dexterity,int costitution,int intellegence,
+                  int wisdom,int charisma) {
+        this.name=name;
+        this.classPlayer=classPlayer;
+        this.strength=strength;
+        this.dexterity=dexterity;
+        this.costitution=costitution;
+        this.intellegence=intellegence;
+        this.wisdom=wisdom;
+        this.charisma=charisma;
+    }
+    
     public String getName() {
         return name;
     }
@@ -51,14 +69,15 @@
     }
 
     public int getStrengthModify() {
-        return strengthModify;
-    }
-
-    public void setStrengthModify(int strengthModify) {
-        this.strengthModify = strengthModify;
+        if (strength>6){                                //Модификаторы
+            return (strength-10)/2;
+        } else{
+            return 0;
+        }
     }
 
     public int getDexterity() {
+
         return dexterity;
     }
 
@@ -67,11 +86,11 @@
     }
 
     public int getDexterityModify() {
-        return dexterityModify;
-    }
-
-    public void setDexterityModify(int dexterityModify) {
-        this.dexterityModify = dexterityModify;
+        if (dexterity>6){
+            return (dexterity-10)/2;
+        } else{
+            return 0;
+        }
     }
 
     public int getCostitution() {
@@ -83,11 +102,12 @@
     }
 
     public int getContitutionModify() {
-        return contitutionModify;
-    }
-
-    public void setContitutionModify(int contitutionModify) {
-        this.contitutionModify = contitutionModify;
+        if (costitution>6){
+            return (costitution-10)/2;
+        }
+        else{
+            return 0;
+        }
     }
 
     public int getIntellegence() {
@@ -99,11 +119,12 @@
     }
 
     public int getIntellegenceModify() {
-        return intellegenceModify;
-    }
-
-    public void setIntellegenceModify(int intellegenceModify) {
-        this.intellegenceModify = intellegenceModify;
+        if (intellegence>6){
+            return (intellegence-10)/2;
+        }
+        else{
+            return 0;
+        }
     }
 
     public int getWisdom() {
@@ -115,11 +136,12 @@
     }
 
     public int getWisdomModify() {
-        return wisdomModify;
-    }
-
-    public void setWisdomModify(int wisdomModify) {
-        this.wisdomModify = wisdomModify;
+        if (wisdom>6){
+            return  (wisdom-10)/2;
+        }
+        else{
+            return 0;
+        }
     }
 
     public int getCharisma() {
@@ -131,11 +153,12 @@
     }
 
     public int getCharismaModify() {
-        return charismaModify;
-    }
-
-    public void setCharismaModify(int charismaModify) {
-        this.charismaModify = charismaModify;
+        if (charisma>6){
+            return (charisma-10)/2;
+        }
+        else{
+            return 0;
+        }
     }
 
     public String getClassPlayer() {
@@ -249,4 +272,40 @@
     public void setExptable(ArrayList<Integer> exptable) {
         this.exptable = exptable;
     }
+
+    public int getKO() {
+        return KO;
+    }
+
+    public void setKO(int KO) {
+        this.KO = KO;
+    }
+
+    public int getInitiative() {
+        return initiative;
+    }
+
+    public void setInitiative(int initiative) {
+        this.initiative = initiative;
+    }
+
+    public String Hit(List<Player> enemy) throws MyException, FileNotFoundException {
+        return null;
+    }
+
+    @Override
+    public String toString() {
+        return "Player{" +
+                "name='" + name + '\'' +
+                ", classPlayer='" + classPlayer + '\'' +
+                ", strength=" + strength +
+                ", dexterity=" + dexterity +
+                ", costitution=" + costitution +
+                ", intellegence=" + intellegence +
+                ", wisdom=" + wisdom +
+                ", charisma=" + charisma +
+                ", health=" + health +
+                '}';
+
+    }
 }
Index: src/com/anton/FightAlgorithm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.anton;\r\n\r\n\r\nimport java.io.FileNotFoundException;\r\nimport java.util.Random;\r\nimport java.util.concurrent.TimeUnit;\r\n\r\npublic class FightAlgorithm {\r\n    public static void oneVSone(Player player,Player enemy) throws FileNotFoundException, InterruptedException {\r\n        boolean win=true;\r\n        Player player1;\r\n        Player player2;\r\n        int initiation1=player.getDexterity();\r\n        int initiation2=player.getDexterity();\r\n        if (initiation1>initiation2){\r\n            player1=player;\r\n            player2=enemy;\r\n        }else{\r\n            player2=player;\r\n            player1=enemy;\r\n        }\r\n//        Visual.battle1vs1(player1,player2);\r\n//        System.out.println(\"Инициатива на стороне \" + player1.getName());\r\n//        do{\r\n//            Visual.health1vs1(player1,player2);\r\n//            Player player3;\r\n//            battle(player1, player2);\r\n//            if (player1.getHealth()<=0||player2.getHealth()<=0){\r\n//                win=false;\r\n//            }else{\r\n//                player3=player1;\r\n//                player1=player2;\r\n//                player2=player3;\r\n//            }\r\n//        }while(win);\r\n    }\r\n    public static void battle (Player player1,Player player2) throws InterruptedException, FileNotFoundException {\r\n        Random random=new Random();\r\n        int damage=0;\r\n        int attack=random.nextInt(20)+1;\r\n        Visual.visual();\r\n        System.out.println(player1.getName()+\" наносит удар \"+ player2.getName());\r\n        for (int i=0;i<7;i++){\r\n            System.out.print(7-i);\r\n            TimeUnit.MILLISECONDS.sleep(250);\r\n            System.out.print(\".\");\r\n            TimeUnit.MILLISECONDS.sleep(250);\r\n            System.out.print(\".\");\r\n            TimeUnit.MILLISECONDS.sleep(250);\r\n            System.out.print(\".\");\r\n            TimeUnit.MILLISECONDS.sleep(250);\r\n        }\r\n        System.out.println(\"Бросок\");\r\n        System.out.println(\"Кубик-\"+attack);\r\n        System.out.println(player1.getName()+\" \"+(player1.getAttackmodificator()+attack)+\"/\"+player2.getName()+\r\n                \" \"+player2.getDefense());\r\n        if (attack==20){\r\n            System.out.println(\"Гарантированое попадание\");\r\n            damage=random.nextInt(player1.getWeapondamage());\r\n            int attackdop=random.nextInt(20)+1;\r\n            if (attackdop>player2.getDefense()){\r\n                damage+=random.nextInt(player1.getWeapondamage());\r\n                System.out.println(\"Прошёл критичный урон всего\");\r\n            }\r\n            System.out.println(player1.getName()+ \" нанёс урон \"+ player2.getName() + \" на \"+ damage);\r\n            player2.setHealth(player2.getHealth()-damage);\r\n            return;\r\n        }\r\n//        if ((attack+player1.getAttackmodificator())>player2.getDefense()){\r\n//            damage+=random.nextInt(player1.getWeapondamage())+1;\r\n//            System.out.println(player1.getName()+ \" \" + HitSuccess.hit()+\" на \"+damage);\r\n//            player2.setHealth(player2.getHealth()-damage);\r\n//        } else {\r\n//            System.out.println(player2.getName()+ \" \" + HitSuccess.nohit());\r\n//        }\r\n        if (player1.getHealth()<=0){\r\n            player1.setLife(false);}\r\n        if (player2.getHealth()<=0){\r\n            player2.setLife(false);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/anton/FightAlgorithm.java b/src/com/anton/FightAlgorithm.java
--- a/src/com/anton/FightAlgorithm.java	(revision 1b875246ab3f43d3ef5cc565ac608300e6627760)
+++ b/src/com/anton/FightAlgorithm.java	(date 1616684242447)
@@ -1,24 +1,99 @@
 package com.anton;
 
-
 import java.io.FileNotFoundException;
-import java.util.Random;
+import java.lang.reflect.Array;
+import java.util.*;
 import java.util.concurrent.TimeUnit;
 
 public class FightAlgorithm {
-    public static void oneVSone(Player player,Player enemy) throws FileNotFoundException, InterruptedException {
-        boolean win=true;
-        Player player1;
-        Player player2;
-        int initiation1=player.getDexterity();
-        int initiation2=player.getDexterity();
-        if (initiation1>initiation2){
-            player1=player;
-            player2=enemy;
-        }else{
-            player2=player;
-            player1=enemy;
+
+    public static void Fight(Player player, List<Player> enemy) throws MyException, FileNotFoundException {
+        int isLifePlayer;
+        int isLifeEnemy;
+        int count=0;
+        List<Player> ListParticipation=new ArrayList<>();
+        ListParticipation.addAll(enemy);
+        ListParticipation.add(player);
+        Collections.sort(ListParticipation,InitiativeComparator);
+        while (true){
+                System.out.println("Раунд " + ++count);
+                Visual.BattleVisual(ListParticipation);
+                String[] textotals=new String[ListParticipation.size()];
+            for (int i=0;i<ListParticipation.size();i++){
+                if(!ListParticipation.get(i).isLife()) {
+                     textotals[i]="";
+                     continue;
+                }
+                textotals[i]=ListParticipation.get(i).Hit(ListOpponent(ListParticipation.get(i),ListParticipation));
+            }
+            for (String x:textotals){
+                System.out.println(x);
+            }
+            for (int i=0;i<ListParticipation.size();i++){
+                if (!ListParticipation.get(i).isLife()){
+                    ListParticipation.remove(i);
+                }
+            }
+            isLifePlayer=0;
+            isLifeEnemy=0;
+            for (Player x:ListParticipation){
+                if (x.isIDplayer()){
+                    isLifePlayer++;
+                }
+                if (!x.isIDplayer()){
+                    isLifeEnemy++;
+                }
+
+            }
+            if (isLifePlayer==0){
+                System.out.println("Вы проиграли");
+                break;
+            }
+            if (isLifeEnemy==0){
+                System.out.println("Вы выиграли");
+                break;
+            }
+        }
+    }
+
+    public static Comparator<Player> InitiativeComparator = new Comparator<Player>() {
+        @Override
+        public int compare(Player e1, Player e2) {
+            if (e1.getInitiative()<e2.getInitiative()){
+                return 1;
+            } else if (e1.getInitiative()>e2.getInitiative()){
+                return -1;
+            }else{
+                return 0;
+            }
         }
+    };
+
+    public static List<Player> ListOpponent(Player player,List<Player> list){
+        List<Player> opponent=new ArrayList<>();
+        for (Player x:list){
+            if (player.isIDplayer()!= x.isIDplayer()){
+                opponent.add(x);
+            }
+        }
+        return opponent;
+    }
+}
+
+
+//    public static void oneVSone(Player player,Player enemy) throws FileNotFoundException, InterruptedException {
+//        boolean win=true;
+//        Player player1;
+//        Player player2;
+//        int initiation1=player.getDexterity();
+//        int initiation2=player.getDexterity();
+//        if (initiation1>initiation2){
+//            player1=player;
+//            player2=enemy;
+//        }else{
+//            player2=player;
+//            player1=enemy;
+//        }
 //        Visual.battle1vs1(player1,player2);
 //        System.out.println("Инициатива на стороне " + player1.getName());
 //        do{
@@ -33,39 +108,39 @@
 //                player2=player3;
 //            }
 //        }while(win);
-    }
-    public static void battle (Player player1,Player player2) throws InterruptedException, FileNotFoundException {
-        Random random=new Random();
-        int damage=0;
-        int attack=random.nextInt(20)+1;
-        Visual.visual();
-        System.out.println(player1.getName()+" наносит удар "+ player2.getName());
-        for (int i=0;i<7;i++){
-            System.out.print(7-i);
-            TimeUnit.MILLISECONDS.sleep(250);
-            System.out.print(".");
-            TimeUnit.MILLISECONDS.sleep(250);
-            System.out.print(".");
-            TimeUnit.MILLISECONDS.sleep(250);
-            System.out.print(".");
-            TimeUnit.MILLISECONDS.sleep(250);
-        }
-        System.out.println("Бросок");
-        System.out.println("Кубик-"+attack);
-        System.out.println(player1.getName()+" "+(player1.getAttackmodificator()+attack)+"/"+player2.getName()+
-                " "+player2.getDefense());
-        if (attack==20){
-            System.out.println("Гарантированое попадание");
-            damage=random.nextInt(player1.getWeapondamage());
-            int attackdop=random.nextInt(20)+1;
-            if (attackdop>player2.getDefense()){
-                damage+=random.nextInt(player1.getWeapondamage());
-                System.out.println("Прошёл критичный урон всего");
-            }
-            System.out.println(player1.getName()+ " нанёс урон "+ player2.getName() + " на "+ damage);
-            player2.setHealth(player2.getHealth()-damage);
-            return;
-        }
+//    }
+//    public static void battle (Player player1,Player player2) throws InterruptedException, FileNotFoundException {
+//        Random random=new Random();
+//        int damage=0;
+//        int attack=random.nextInt(20)+1;
+//        Visual.visual();
+//        System.out.println(player1.getName()+" наносит удар "+ player2.getName());
+//        for (int i=0;i<7;i++){
+//            System.out.print(7-i);
+//            TimeUnit.MILLISECONDS.sleep(250);
+//            System.out.print(".");
+//            TimeUnit.MILLISECONDS.sleep(250);
+//            System.out.print(".");
+//            TimeUnit.MILLISECONDS.sleep(250);
+//            System.out.print(".");
+//            TimeUnit.MILLISECONDS.sleep(250);
+//        }
+//        System.out.println("Бросок");
+//        System.out.println("Кубик-"+attack);
+//        System.out.println(player1.getName()+" "+(player1.getAttackmodificator()+attack)+"/"+player2.getName()+
+//                " "+player2.getDefense());
+//        if (attack==20){
+//            System.out.println("Гарантированое попадание");
+//            damage=random.nextInt(player1.getWeapondamage());
+//            int attackdop=random.nextInt(20)+1;
+//            if (attackdop>player2.getDefense()){
+//                damage+=random.nextInt(player1.getWeapondamage());
+//                System.out.println("Прошёл критичный урон всего");
+//            }
+//            System.out.println(player1.getName()+ " нанёс урон "+ player2.getName() + " на "+ damage);
+//            player2.setHealth(player2.getHealth()-damage);
+//            return;
+//        }
 //        if ((attack+player1.getAttackmodificator())>player2.getDefense()){
 //            damage+=random.nextInt(player1.getWeapondamage())+1;
 //            System.out.println(player1.getName()+ " " + HitSuccess.hit()+" на "+damage);
@@ -73,12 +148,12 @@
 //        } else {
 //            System.out.println(player2.getName()+ " " + HitSuccess.nohit());
 //        }
-        if (player1.getHealth()<=0){
-            player1.setLife(false);}
-        if (player2.getHealth()<=0){
-            player2.setLife(false);
-        }
-    }
+//        if (player1.getHealth()<=0){
+//            player1.setLife(false);}
+//        if (player2.getHealth()<=0){
+//            player2.setLife(false);
+//        }
+//    }
+//}
 
 
-}
Index: src/com/anton/ClassPlayer/Warior.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.anton.ClassPlayer;\r\n\r\nimport com.anton.Player;\r\nimport com.anton.PlayerInitialized;\r\nimport com.anton.Visual;\r\n\r\nimport java.io.FileInputStream;\r\nimport java.io.IOException;\r\nimport java.io.ObjectInputStream;\r\nimport java.util.*;\r\n\r\npublic class Warior extends Player {\r\n\r\n    public Warior(String name,String classPlayer,int strength,int dexterity,int costitution,int intellegence,\r\n                  int wisdom,int charisma) {\r\n\r\n        setName(name);                 //Общие данные\r\n        setClassPlayer(classPlayer);   //Общие данные\r\n\r\n        setStrength(strength);         //Характеристики\r\n        setDefense(dexterity);         //Характеристики\r\n        setCostitution(costitution);   //Характеристики\r\n        setIntellegence(intellegence); //Характеристики\r\n        setWisdom(wisdom);             //Характеристики\r\n        setCharisma(charisma);         //Характеристики\r\n\r\n        if (strength>6){                                //Модификаторы\r\n            setStrengthModify((strength-10)/2);\r\n        } else{\r\n            setStrengthModify(0);\r\n        }\r\n        if (dexterity>6){\r\n            setDexterityModify((dexterity-10)/2);\r\n        } else{\r\n            setDexterityModify(0);\r\n        }\r\n        if (costitution>6){\r\n            setContitutionModify((costitution-10)/2);\r\n        }\r\n        else{\r\n            setContitutionModify(0);\r\n        }\r\n        if (intellegence>6){\r\n            setIntellegenceModify((intellegence-10)/2);\r\n        }\r\n        else{\r\n            setIntellegenceModify(0);\r\n        }\r\n        if (wisdom>6){\r\n            setWisdomModify((wisdom-10)/2);\r\n        }\r\n        else{\r\n            setWisdomModify(0);\r\n        }\r\n        if (charisma>6){\r\n            setCharismaModify((charisma-10)/2);\r\n        }\r\n        else{\r\n            setCharismaModify(0);\r\n        }\r\n\r\n        setHealth(10+getContitutionModify());  //ХП текущая\r\n        setHealthmax(getHealth());             //ХП максимальная\r\n\r\n        setBasicmodificatorattack(3);                                          //(БМА) Базовый модификатор атаки\r\n        setAttackmodificator(getStrengthModify()+getBasicmodificatorattack()); //Модификатор атаки в бою\r\n\r\n        setDefense(10+getDexterityModify());      //защита в бою\r\n        setWeapondamage(3);                       //максимальный урон оружием\r\n        setLife(true);                            //состояние живой или мёртвый\r\n        setIDplayer(true);                        //состояние свой-чужой\r\n        setLvl(1);\r\n        setExptable(new ArrayList<>(Arrays.asList(0,2000,5000,9000,15000,23000,35000,51000,75000,105000,\r\n                            155000,220000,315000,445000,635000,895000,1350000,1800000,\r\n                            2550000,3600000)));   //список опыта\r\n        setExperience(getExptable().get(0));      //начальный опыт\r\n        setExperiencemax(getExptable().get(1));   //опыт следующего уровня\r\n    }\r\n\r\n    public static Warior initialized() throws IOException, ClassNotFoundException {\r\n        boolean exit;\r\n        Scanner scanner=new Scanner(System.in);\r\n        System.out.println(\"Введите имя персонажа\");\r\n        String name=scanner.nextLine();\r\n        do{\r\n            exit=true;\r\n\r\n            System.out.println(\"Выбрать созданного персонажа (1), с выбранными характеристиками (2) или сохранённого (3)\");\r\n            int start=scanner.nextInt();\r\n\r\n            switch (start){\r\n                case 1:\r\n                    break;\r\n                case 2:\r\n                    int[] character= PlayerInitialized.character();\r\n                    Warior men=new Warior(name,\"Воин\",character[0],character[1],character[2],character[3],character[4],\r\n                    character[5]);\r\n                    return men;\r\n                case 3:\r\n                    ObjectInputStream ois=new ObjectInputStream(new FileInputStream(\"PersonCharact.bin\"));\r\n                    int[] character2=(int[]) ois.readObject();\r\n                    Warior men2 = new Warior(name, \"Воин\", character2[0], character2[1], character2[2], character2[3], character2[4],\r\n                            character2[5]);\r\n                    ois.close();\r\n                    return men2;\r\n                default:\r\n                    System.out.println(\"Неверное значение введите ещё раз\");\r\n            }\r\n        }while(exit);\r\n        return null;\r\n    }\r\n\r\n    public void Hello(){\r\n        System.out.println(\"Hello\");\r\n    }\r\n\r\n    public void Fight (Player enemy){\r\n        Random random=new Random();\r\n        int damage=0;\r\n        int attack=random.nextInt(20)+1;\r\n        Visual.visual();\r\n//        System.out.println(get+\" наносит удар \"+ player2.getName());\r\n//\r\n//        System.out.println(\"Бросок\");\r\n//        System.out.println(\"Кубик-\"+attack);\r\n//        System.out.println(player1.getName()+\" \"+(player1.getAttackmodificator()+attack)+\"/\"+player2.getName()+\r\n//                \" \"+player2.getDefense());\r\n//        if (attack==20){\r\n//            System.out.println(\"Гарантированое попадание\");\r\n//            damage=random.nextInt(player1.getWeapondamage());\r\n//            int attackdop=random.nextInt(20)+1;\r\n//            if (attackdop>player2.getDefense()){\r\n//                damage+=random.nextInt(player1.getWeapondamage());\r\n//                System.out.println(\"Прошёл критичный урон всего\");\r\n//            }\r\n//            System.out.println(player1.getName()+ \" нанёс урон \"+ player2.getName() + \" на \"+ damage);\r\n//            player2.setHealth(player2.getHealth()-damage);\r\n//            return;\r\n//        }\r\n//        if (player1.getHealth()<=0){\r\n//            player1.setLife(false);}\r\n//        if (player2.getHealth()<=0){\r\n//            player2.setLife(false);\r\n//        }\r\n   }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/anton/ClassPlayer/Warior.java b/src/com/anton/ClassPlayer/Warior.java
--- a/src/com/anton/ClassPlayer/Warior.java	(revision 1b875246ab3f43d3ef5cc565ac608300e6627760)
+++ b/src/com/anton/ClassPlayer/Warior.java	(date 1616684242456)
@@ -1,63 +1,24 @@
 package com.anton.ClassPlayer;
 
+import com.anton.MyException;
 import com.anton.Player;
 import com.anton.PlayerInitialized;
+import com.anton.TextBattle.HitSuccess;
 import com.anton.Visual;
 
 import java.io.FileInputStream;
+import java.io.FileNotFoundException;
 import java.io.IOException;
 import java.io.ObjectInputStream;
 import java.util.*;
 
 public class Warior extends Player {
+    private static Scanner scanner=new Scanner(System.in);
 
     public Warior(String name,String classPlayer,int strength,int dexterity,int costitution,int intellegence,
                   int wisdom,int charisma) {
 
-        setName(name);                 //Общие данные
-        setClassPlayer(classPlayer);   //Общие данные
-
-        setStrength(strength);         //Характеристики
-        setDefense(dexterity);         //Характеристики
-        setCostitution(costitution);   //Характеристики
-        setIntellegence(intellegence); //Характеристики
-        setWisdom(wisdom);             //Характеристики
-        setCharisma(charisma);         //Характеристики
-
-        if (strength>6){                                //Модификаторы
-            setStrengthModify((strength-10)/2);
-        } else{
-            setStrengthModify(0);
-        }
-        if (dexterity>6){
-            setDexterityModify((dexterity-10)/2);
-        } else{
-            setDexterityModify(0);
-        }
-        if (costitution>6){
-            setContitutionModify((costitution-10)/2);
-        }
-        else{
-            setContitutionModify(0);
-        }
-        if (intellegence>6){
-            setIntellegenceModify((intellegence-10)/2);
-        }
-        else{
-            setIntellegenceModify(0);
-        }
-        if (wisdom>6){
-            setWisdomModify((wisdom-10)/2);
-        }
-        else{
-            setWisdomModify(0);
-        }
-        if (charisma>6){
-            setCharismaModify((charisma-10)/2);
-        }
-        else{
-            setCharismaModify(0);
-        }
+        super(name,classPlayer,strength,dexterity,costitution,intellegence,wisdom,charisma);
 
         setHealth(10+getContitutionModify());  //ХП текущая
         setHealthmax(getHealth());             //ХП максимальная
@@ -69,25 +30,22 @@
         setWeapondamage(3);                       //максимальный урон оружием
         setLife(true);                            //состояние живой или мёртвый
         setIDplayer(true);                        //состояние свой-чужой
-        setLvl(1);
+        setLvl(1);                                //начальный лвл
         setExptable(new ArrayList<>(Arrays.asList(0,2000,5000,9000,15000,23000,35000,51000,75000,105000,
                             155000,220000,315000,445000,635000,895000,1350000,1800000,
                             2550000,3600000)));   //список опыта
         setExperience(getExptable().get(0));      //начальный опыт
         setExperiencemax(getExptable().get(1));   //опыт следующего уровня
+        setInitiative(getDexterity());            //Инициатива;
     }
 
-    public static Warior initialized() throws IOException, ClassNotFoundException {
-        boolean exit;
+    public static Warior initialized(String name) throws IOException, ClassNotFoundException {
         Scanner scanner=new Scanner(System.in);
-        System.out.println("Введите имя персонажа");
-        String name=scanner.nextLine();
+        boolean exit;
         do{
             exit=true;
-
             System.out.println("Выбрать созданного персонажа (1), с выбранными характеристиками (2) или сохранённого (3)");
             int start=scanner.nextInt();
-
             switch (start){
                 case 1:
                     break;
@@ -110,38 +68,57 @@
         return null;
     }
 
-    public void Hello(){
-        System.out.println("Hello");
-    }
-
-    public void Fight (Player enemy){
+    public String Hit (List<Player> enemy) throws MyException, FileNotFoundException {
+        String results="";
+        boolean run=true;
+        int x=0;
+        if (enemy.size()>1){
+            do {
+                try{
+                System.out.println(getName()+ " " +getHealth()+"/"+getHealthmax()+" выберите противника:");
+
+                for (int i=0;i<enemy.size();i++){
+                    System.out.println((i + 1) + "." + enemy.get(i).getName() + "-" + enemy.get(i).getHealth() + "/" + enemy.get(i).getHealthmax());
+                }
+                String xtemp=scanner.nextLine();
+                x=Integer.parseInt(xtemp);
+                }catch (NumberFormatException e) {
+                    System.out.println("Вы ввели не число ");
+                    continue;
+                }
+                if (x>enemy.size()) {
+                    System.out.println("Невереное число, не более " + enemy.size());
+                    continue;
+                }
+                x--;
+                run=false;
+                }while(run);
+        }else {
+            x=0;
+        }
         Random random=new Random();
         int damage=0;
         int attack=random.nextInt(20)+1;
-        Visual.visual();
-//        System.out.println(get+" наносит удар "+ player2.getName());
-//
-//        System.out.println("Бросок");
-//        System.out.println("Кубик-"+attack);
-//        System.out.println(player1.getName()+" "+(player1.getAttackmodificator()+attack)+"/"+player2.getName()+
-//                " "+player2.getDefense());
-//        if (attack==20){
-//            System.out.println("Гарантированое попадание");
-//            damage=random.nextInt(player1.getWeapondamage());
-//            int attackdop=random.nextInt(20)+1;
-//            if (attackdop>player2.getDefense()){
-//                damage+=random.nextInt(player1.getWeapondamage());
-//                System.out.println("Прошёл критичный урон всего");
-//            }
-//            System.out.println(player1.getName()+ " нанёс урон "+ player2.getName() + " на "+ damage);
-//            player2.setHealth(player2.getHealth()-damage);
-//            return;
-//        }
-//        if (player1.getHealth()<=0){
-//            player1.setLife(false);}
-//        if (player2.getHealth()<=0){
-//            player2.setLife(false);
-//        }
-   }
-
+        if (attack==20) {
+            damage = random.nextInt(getWeapondamage());
+            int attackdop = random.nextInt(20) + 1;
+            if (attackdop > enemy.get(x).getDefense()) {
+                damage += random.nextInt(getWeapondamage());
+            }
+            enemy.get(x).setHealth(enemy.get(x).getHealth() - damage);
+            results=(getName()+" наносит критический урон "+ enemy.get(x).getName());
+        } else if ((attack+getAttackmodificator())>enemy.get(x).getDefense()){
+            damage+=random.nextInt(getWeapondamage())+1;
+            enemy.get(x).setHealth(enemy.get(x).getHealth()-damage);
+            results=(getName()+ " " + HitSuccess.hit()+" на "+damage);
+        } else {
+            results=enemy.get(x).getName()+ " " + HitSuccess.nohit();
+        }
+        if (enemy.get(x).getHealth()<=0){
+            enemy.get(x).setHealth(0);
+            enemy.get(x).setLife(false);
+            results+=" и "+ enemy.get(x).getName().toLowerCase() + " был убит";
+        }
+        return results;
+    }
 }
Index: src/com/anton/ClassEnemy/Skelet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.anton.ClassEnemy;\r\n\r\nimport com.anton.Player;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class Skelet extends Player{\r\n    private int initiative;\r\n    private int armorclass;\r\n\r\n    public Skelet(int KO) {\r\n        setClassPlayer(\"Cкелет\");\r\n        setName(\"Скелет\");\r\n\r\n\r\n        HashMap<String,Integer[]> maptemp=new HashMap<>();\r\n        maptemp.put(\"сломанный скирт\", new Integer[]{0,6});\r\n        maptemp.put(\"сломанный скирт\", new Integer[]{0,6});\r\n        maptemp.put(\"удар когтями\", new Integer[]{1,5});\r\n        maptemp.put(\"двойной удар когтями\", new Integer[]{2,6});\r\n        setWeapon(maptemp);\r\n\r\n        setInitiative(6);\r\n        setArmorclass(16);\r\n\r\n        setStrength(15);\r\n        setDexterity(14);\r\n        setCostitution(0);\r\n        setCharisma(12);\r\n        setIntellegence(0);\r\n        setWisdom(10);\r\n\r\n        if (getStrength()>6){                                //Модификаторы\r\n            setStrengthModify((getStrength()-10)/2);\r\n        } else{\r\n            setStrengthModify(0);\r\n        }\r\n        if (getDexterity()>6){\r\n            setDexterityModify((getDexterity()-10)/2);\r\n        } else{\r\n            setDexterityModify(0);\r\n        }\r\n        if (getCostitution()>6){\r\n            setContitutionModify((getCostitution()-10)/2);\r\n        }\r\n        else{\r\n            setContitutionModify(0);\r\n        }\r\n        if (getIntellegence()>6){\r\n            setIntellegenceModify((getIntellegence()-10)/2);\r\n        }\r\n        else{\r\n            setIntellegenceModify(0);\r\n        }\r\n        if (getWisdom()>6){\r\n            setWisdomModify((getWisdom()-10)/2);\r\n        }\r\n        else{\r\n            setWisdomModify(0);\r\n        }\r\n        if (getCharisma()>6){\r\n            setCharismaModify((getCharisma()-10)/2);\r\n        }\r\n        else{\r\n            setCharismaModify(0);\r\n        }\r\n\r\n        setHealth(4);\r\n        setHealthmax(getHealth());\r\n\r\n        setBasicmodificatorattack((int)KO*3/4);\r\n        setAttackmodificator(getStrengthModify()+getBasicmodificatorattack());\r\n\r\n        setDefense(10+getDexterityModify());\r\n        setWeapondamage(6);\r\n        setLife(true);\r\n        setIDplayer(false);\r\n    }\r\n\r\n    public int getInitiative() {\r\n        return initiative;\r\n    }\r\n\r\n    public void setInitiative(int initiative) {\r\n        this.initiative = initiative;\r\n    }\r\n\r\n    public int getArmorclass() {\r\n        return armorclass;\r\n    }\r\n\r\n    public void setArmorclass(int armorclass) {\r\n        this.armorclass = armorclass;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/anton/ClassEnemy/Skelet.java b/src/com/anton/ClassEnemy/Skelet.java
--- a/src/com/anton/ClassEnemy/Skelet.java	(revision 1b875246ab3f43d3ef5cc565ac608300e6627760)
+++ b/src/com/anton/ClassEnemy/Skelet.java	(date 1616684242464)
@@ -1,29 +1,29 @@
 package com.anton.ClassEnemy;
 
+import com.anton.MyException;
 import com.anton.Player;
+import com.anton.TextBattle.HitSuccess;
 
-import java.util.HashMap;
-import java.util.Map;
+import java.io.FileNotFoundException;
+import java.util.*;
 
 public class Skelet extends Player{
-    private int initiative;
-    private int armorclass;
+    private static Scanner scanner=new Scanner(System.in);
+    Random random=new Random();
 
     public Skelet(int KO) {
-        setClassPlayer("Cкелет");
-        setName("Скелет");
+        super(KO);
 
+        HashMap<String,Integer[]> action=new HashMap<>();
+        action.put("удар сломанным скиртом", new Integer[]{0,6});
+        action.put("удар когтями", new Integer[]{1,5});
+        action.put("двойной удар когтями", new Integer[]{2,6});
+        List<String> surname= Arrays.asList("Cтарый","Ржавый","Фиолетовый","Зелёный","Трухлявый");
 
-        HashMap<String,Integer[]> maptemp=new HashMap<>();
-        maptemp.put("сломанный скирт", new Integer[]{0,6});
-        maptemp.put("сломанный скирт", new Integer[]{0,6});
-        maptemp.put("удар когтями", new Integer[]{1,5});
-        maptemp.put("двойной удар когтями", new Integer[]{2,6});
-        setWeapon(maptemp);
-
+        setClassPlayer("Скелет");
+        setName(surname.get(random.nextInt(surname.size()-1)) + " скелет");
+        setWeapon(action);
         setInitiative(6);
-        setArmorclass(16);
-
         setStrength(15);
         setDexterity(14);
         setCostitution(0);
@@ -31,67 +31,57 @@
         setIntellegence(0);
         setWisdom(10);
 
-        if (getStrength()>6){                                //Модификаторы
-            setStrengthModify((getStrength()-10)/2);
-        } else{
-            setStrengthModify(0);
-        }
-        if (getDexterity()>6){
-            setDexterityModify((getDexterity()-10)/2);
-        } else{
-            setDexterityModify(0);
-        }
-        if (getCostitution()>6){
-            setContitutionModify((getCostitution()-10)/2);
-        }
-        else{
-            setContitutionModify(0);
-        }
-        if (getIntellegence()>6){
-            setIntellegenceModify((getIntellegence()-10)/2);
-        }
-        else{
-            setIntellegenceModify(0);
-        }
-        if (getWisdom()>6){
-            setWisdomModify((getWisdom()-10)/2);
-        }
-        else{
-            setWisdomModify(0);
-        }
-        if (getCharisma()>6){
-            setCharismaModify((getCharisma()-10)/2);
-        }
-        else{
-            setCharismaModify(0);
-        }
-
         setHealth(4);
         setHealthmax(getHealth());
-
         setBasicmodificatorattack((int)KO*3/4);
         setAttackmodificator(getStrengthModify()+getBasicmodificatorattack());
-
-        setDefense(10+getDexterityModify());
-        setWeapondamage(6);
+        setDefense(16);
         setLife(true);
         setIDplayer(false);
     }
 
-    public int getInitiative() {
-        return initiative;
-    }
-
-    public void setInitiative(int initiative) {
-        this.initiative = initiative;
-    }
-
-    public int getArmorclass() {
-        return armorclass;
-    }
-
-    public void setArmorclass(int armorclass) {
-        this.armorclass = armorclass;
+    public String Hit (List<Player> enemy) throws MyException, FileNotFoundException {
+        int damage=0;
+        String results="";
+        int i=0;
+        int tableID=random.nextInt(getWeapon().size());
+        String[] tableIDstring=new String[getWeapon().size()];
+        Integer[][] tableIDinteger=new Integer[getWeapon().size()][2];
+        for (Map.Entry<String,Integer[]> x:getWeapon().entrySet()){
+            tableIDstring[i]=x.getKey();
+            tableIDinteger[i]=x.getValue();
+            i++;
+        }
+        boolean run=true;
+        int x=0;
+        if (enemy.size()>1){
+            x=random.nextInt(enemy.size());
+        }else {
+            x=0;
+        }
+        int attacknominal=tableIDinteger[tableID][1]-tableIDinteger[tableID][0];
+        int attack=random.nextInt(20)+1;
+        if (attack==20) {
+            damage = random.nextInt(attacknominal)+1+tableIDinteger[tableID][0];
+            int attackdop = random.nextInt(20) + 1;
+            if (attackdop > enemy.get(x).getDefense()) {
+                damage += random.nextInt(attacknominal)+1+tableIDinteger[tableID][0];
+            }
+            enemy.get(x).setHealth(enemy.get(x).getHealth() - damage);
+            results=(getName()+" наносит критический урон "+ enemy.get(x).getName());
+        } else if ((attack+getAttackmodificator())>enemy.get(x).getDefense()){
+            damage+=random.nextInt(attacknominal)+1+tableIDinteger[tableID][0];
+            enemy.get(x).setHealth(enemy.get(x).getHealth()-damage);
+            results=(getName()+ " " + HitSuccess.hit()+" на "+damage);
+        } else {
+            results=enemy.get(x).getName()+ " " + HitSuccess.nohit();
+        }
+        if (enemy.get(x).getHealth()<=0){
+            enemy.get(x).setHealth(0);
+            enemy.get(x).setLife(false);
+            results+=" и " +enemy.get(x).getName().toLowerCase()+  " был убит";
+        }
+        return results;
     }
 
 }
Index: src/com/anton/MyException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/com/anton/MyException.java b/src/com/anton/MyException.java
new file mode 100644
--- /dev/null	(date 1616684242545)
+++ b/src/com/anton/MyException.java	(date 1616684242545)
@@ -0,0 +1,17 @@
+package com.anton;
+
+public class MyException extends Exception{
+    private int number;
+
+    public int getNumber() {
+        return number;
+    }
+
+    public void setNumber(int number) {
+        this.number = number;
+    }
+
+    public MyException (String s, int x){
+        super(s);
+    }
+}
